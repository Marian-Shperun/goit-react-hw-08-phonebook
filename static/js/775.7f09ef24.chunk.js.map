{"version":3,"file":"static/js/775.7f09ef24.chunk.js","mappings":"mQAmBWA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,E,4BC+EpB,EAxFoB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACfC,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,UAAS,CACjDC,KAAM,GACNC,OAAQ,KAFV,eAAOC,EAAP,KAAsBC,EAAtB,KAKMC,GAAWC,EAAAA,EAAAA,MAEXC,EAASpB,IACTqB,EAAWrB,IAEXsB,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACdR,GAAiB,SAAAS,GAAS,yBACrBA,GADqB,cAEvBZ,EAAOW,GAFgB,GAI3B,EAyBD,OACE,iCACE,+CACA,kBACEE,MAAO,CAAEC,QAAS,OAAQC,OAAQ,0BAClCC,SAtBe,SAAAP,GACnBA,EAAEQ,iBACF,IARwBC,EAQlBC,GAAU,QACd3B,GAAIN,KACDgB,GAEL,OAZwBgB,EAYDC,EAAWnB,MAXlC,OAAOJ,QAAP,IAAOA,OAAP,EAAOA,EAAUwB,MACf,SAAAC,GAAO,OAAW,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASrB,KAAKsB,iBAAkBJ,EAAYI,aAAhD,MAgBPC,MAAM,GAAD,OAAIJ,EAAWnB,KAAf,4BACE,IANPI,GAASoB,EAAAA,EAAAA,IAAWL,IACpBV,EAAEC,OAAOe,QACT5B,EAAS,MACF,EAKV,EAKG,WAIE,mBAAO6B,QAASpB,EAAhB,kBAEE,mBACA,kBACEqB,KAAK,OACL3B,KAAK,OACL4B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRtC,GAAIc,EACJyB,SAAUvB,KAEZ,iBAAMK,MAAO,CAAEmB,SAAU,WAAYC,IAAK,QAASC,KAAM,OAAzD,UACE,SAACC,EAAA,EAAD,CAAYC,GAAI,CAAEC,GAAI,EAAGC,SAAU,YAGvC,mBAAOZ,QAASnB,EAAhB,oBAEE,mBACA,kBACEoB,KAAK,MACL3B,KAAK,SACLR,GAAIe,EACJqB,QAAQ,yFACRC,MAAM,+FACNU,aAAa,IACbR,SAAUvB,EACVsB,UAAQ,KAEV,iBAAMjB,MAAO,CAAEmB,SAAU,WAAYC,IAAK,QAASC,KAAM,OAAzD,UACE,SAACM,EAAA,EAAD,CAAgBJ,GAAI,CAAEC,GAAI,EAAGC,SAAU,YAG3C,mBAAQX,KAAK,SAAb,4BAIP,C,2BC/FGc,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,qPACD,cAEJN,EAAQ,EAAUG,C,0BCfdL,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kHACD,UAEJN,EAAQ,EAAUG,C","sources":["../node_modules/nanoid/index.browser.js","components/FormContact/FormContact.jsx","../node_modules/@mui/icons-material/LocalPhone.js","../node_modules/@mui/icons-material/Person.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'globalState/contacts/operations';\n\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport { LocalPhoneIcon, PersonIcon } from '../IconsApp';\n\nconst FormContact = ({ contacts }) => {\n  const navigate = useNavigate();\n  const [valuesOfInput, setValuesOfInput] = useState({\n    name: '',\n    number: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const idName = nanoid();\n  const idNumber = nanoid();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValuesOfInput(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const checkNameContacts = enteredName => {\n    return contacts?.find(\n      contact => contact?.name.toLowerCase() === enteredName.toLowerCase()\n    );\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      ...valuesOfInput,\n    };\n    if (!checkNameContacts(newContact.name)) {\n      dispatch(addContact(newContact));\n      e.target.reset();\n      navigate('/');\n      return true;\n    } else {\n      alert(`${newContact.name} is already in contact`);\n      return false;\n    }\n  };\n\n  return (\n    <>\n      <h2>Add a new contact</h2>\n      <form\n        style={{ padding: '20px', border: '1px solid rgb(2, 2, 2)' }}\n        onSubmit={handleSubmit}\n      >\n        <label htmlFor={idName}>\n          Name\n          <br />\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={idName}\n            onChange={handleChange}\n          />\n          <span style={{ position: 'relative', top: '-26px', left: '5px' }}>\n            <PersonIcon sx={{ mr: 1, fontSize: 18 }} />\n          </span>\n        </label>\n        <label htmlFor={idNumber}>\n          Number\n          <br />\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={idNumber}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            defaultValue=\"+\"\n            onChange={handleChange}\n            required\n          />\n          <span style={{ position: 'relative', top: '-26px', left: '5px' }}>\n            <LocalPhoneIcon sx={{ mr: 1, fontSize: 18 }} />\n          </span>\n        </label>\n        <button type=\"submit\">Add const</button>\n      </form>\n    </>\n  );\n};\nexport default FormContact;\nFormContact.propTypes = {\n  contacts: PropTypes.array,\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"\n}), 'LocalPhone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","contacts","navigate","useNavigate","useState","name","number","valuesOfInput","setValuesOfInput","dispatch","useDispatch","idName","idNumber","handleChange","e","target","value","prevState","style","padding","border","onSubmit","preventDefault","enteredName","newContact","find","contact","toLowerCase","alert","addContact","reset","htmlFor","type","pattern","title","required","onChange","position","top","left","Person","sx","mr","fontSize","defaultValue","LocalPhone","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}