{"version":3,"file":"static/js/848.dc6acef4.chunk.js","mappings":"gUAEaA,EAAcC,EAAAA,GAAAA,KAAH,kYAiBXC,EAAYD,EAAAA,GAAAA,IAAH,yGAOTE,EAAeF,EAAAA,GAAAA,KAAH,4F,SC+FzB,EA7GiB,SAAC,GAAsB,IAApBG,EAAmB,EAAnBA,aAClB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MA4BjB,SAASC,IACP,MAAc,KAAVR,GAA6B,KAAbE,GAClBO,MAAM,eACC,GACEP,EAASQ,OAAS,GAC3BD,MAAM,wBACC,QAFF,CAIR,CAED,OACE,UAACjB,EAAD,CAAamB,UAAU,OAAOC,SArCH,SAAAC,GAC3BA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACf,GAAIpB,EAAc,CAChB,GAAIY,IAAgB,OACpBJ,GACEa,EAAAA,EAAAA,IAAS,CACPnB,KAAAA,EACAE,MAAAA,EACAE,SAAAA,KAGJI,EAAS,IACV,KAAM,CACL,GAAIE,IAAgB,OACpBJ,GACEc,EAAAA,EAAAA,IAAM,CACJlB,MAAAA,EACAE,SAAAA,KAGJI,EAAS,IACV,CACDS,EAAKI,OACN,EAaC,UACGvB,IACC,UAACwB,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,OAAOC,GAAI,CAAEC,GAAI,GAArC,wBAGA,SAACC,EAAA,EAAD,CACE3B,KAAK,OACL4B,KAAK,OACLC,YAAY,OACZC,SAAU,SAAAC,GAAK,OAAI9B,EAAQ8B,EAAMC,OAAOC,MAAzB,KAEjB,SAACpC,EAAD,WACE,SAACqC,EAAA,EAAD,CAAYT,GAAI,CAAEU,GAAI,EAAGC,SAAU,YAKzC,UAACd,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,GAAI,CAAEC,GAAI,GAAtC,4BAGA,SAACC,EAAA,EAAD,CACE3B,KAAK,QACL4B,KAAK,QACLC,YAAY,QACZC,SAAU,SAAAC,GAAK,OAAI5B,EAAS4B,EAAMC,OAAOC,MAA1B,KAEjB,SAACpC,EAAD,WACE,SAACwC,EAAA,EAAD,CAAoBZ,GAAI,CAAEU,GAAI,EAAGC,SAAU,YAI/C,UAACd,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,WAAWC,GAAI,CAAEC,GAAI,GAAzC,uBAIA,SAACC,EAAA,EAAD,CACE3B,KAAK,WACL4B,KAAK,WACLC,YAAY,WACZC,SAAU,SAAAC,GAAK,OAAI1B,EAAY0B,EAAMC,OAAOC,MAA7B,KAEjB,SAACpC,EAAD,WACE,SAACyC,EAAA,EAAD,CAAYb,GAAI,CAAEU,GAAI,EAAGC,SAAU,YAIvC,UAACxC,EAAD,WACGE,GACC,mBAAQ8B,KAAK,SAAb,2BAEA,mBAAQA,KAAK,SAAb,qBAED9B,GACC,SAAC,KAAD,CAASyC,GAAG,SAAZ,qBAEA,SAAC,KAAD,CAASA,GAAG,YAAZ,+BAKT,C,qDCnHD,UAHe,WACb,OAAO,SAAC,IAAD,GACR,C","sources":["components/FormAuth/FormAuth.styled.js","components/FormAuth/FormAuth.jsx","pages/SignIn.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormAuthent = styled.form`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n\n  background-color: #ffffff61;\n  backdrop-filter: blur(4px);\n  border: none;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 2px 1px -1px rgb(0 0 0 / 20%), 0 1px 3px 0 rgb(0 0 0 / 14%),\n    0 1px 3px 0 rgb(0 0 0 / 12%);\n`;\n\nexport const BlockBtns = styled.div`\n  display: flex;\n  width: fit-content;\n  align-items: flex-end;\n  gap: 15px;\n`;\n\nexport const IconFormAuth = styled.span`\n  position: relative;\n  top: -30px;\n  left: 5px;\n  width: 20px;\n`;\n","import { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\nimport { register, logIn } from 'globalState/auth/operations';\n\nimport { InputLabel, Input, FormControl } from '@mui/material';\n\nimport PropTypes from 'prop-types';\nimport { PersonIcon, AlternateEmailIcon, VpnKeyIcon } from '../IconsApp';\nimport { FormAuthent, IconFormAuth, BlockBtns } from './FormAuth.styled';\n\nconst FormAuth = ({ formRegister }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmitFornAuth = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (formRegister) {\n      if (validateForm()) return;\n      dispatch(\n        register({\n          name,\n          email,\n          password,\n        })\n      );\n      navigate('/');\n    } else {\n      if (validateForm()) return;\n      dispatch(\n        logIn({\n          email,\n          password,\n        })\n      );\n      navigate('/');\n    }\n    form.reset();\n  };\n\n  function validateForm() {\n    if (email === '' || password === '') {\n      alert('Enter data');\n      return true;\n    } else if (password.length < 7) {\n      alert('unreliable password');\n      return true;\n    }\n  }\n  \n  return (\n    <FormAuthent className=\"form\" onSubmit={handleSubmitFornAuth}>\n      {formRegister && (\n        <FormControl>\n          <InputLabel htmlFor=\"name\" sx={{ pl: 2 }}>\n            User name\n          </InputLabel>\n          <Input\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            onChange={event => setName(event.target.value)}\n          />\n          <IconFormAuth>\n            <PersonIcon sx={{ mr: 1, fontSize: 18 }} />\n          </IconFormAuth>\n        </FormControl>\n      )}\n\n      <FormControl>\n        <InputLabel htmlFor=\"email\" sx={{ pl: 2 }}>\n          Email address\n        </InputLabel>\n        <Input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          onChange={event => setEmail(event.target.value)}\n        />\n        <IconFormAuth>\n          <AlternateEmailIcon sx={{ mr: 1, fontSize: 18 }} />\n        </IconFormAuth>\n      </FormControl>\n\n      <FormControl>\n        <InputLabel htmlFor=\"password\" sx={{ pl: 2 }}>\n          Password\n        </InputLabel>\n\n        <Input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={event => setPassword(event.target.value)}\n        />\n        <IconFormAuth>\n          <VpnKeyIcon sx={{ mr: 1, fontSize: 18 }} />\n        </IconFormAuth>\n      </FormControl>\n\n      <BlockBtns>\n        {formRegister ? (\n          <button type=\"submit\">Registration</button>\n        ) : (\n          <button type=\"submit\">Sing in</button>\n        )}\n        {formRegister ? (\n          <NavLink to=\"/login\">Log in</NavLink>\n        ) : (\n          <NavLink to=\"/register\">Registration</NavLink>\n        )}\n      </BlockBtns>\n    </FormAuthent>\n  );\n};\nexport default FormAuth;\n\nFormAuth.propTypes = {\n  register: PropTypes.bool,\n};\n","import FormAuth from 'components/FormAuth';\n\nconst SignIn = () => {\n  return <FormAuth />;\n};\nexport default SignIn;\n"],"names":["FormAuthent","styled","BlockBtns","IconFormAuth","formRegister","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","navigate","useNavigate","validateForm","alert","length","className","onSubmit","e","preventDefault","form","currentTarget","register","logIn","reset","FormControl","InputLabel","htmlFor","sx","pl","Input","type","placeholder","onChange","event","target","value","Person","mr","fontSize","AlternateEmail","VpnKey","to"],"sourceRoot":""}